@using System.Linq
@using DBGestaoEmpresarial.Domain.Entities.Enums
@using DBGestaoEmpresarial.WebUI.Server.Components.Pages
@using DBGestaoEmpresarial.WebUI.Server.Components.Layout
@rendermode InteractiveServer

@if (employes == null)
{
        <p>Carregando empregados...</p>
}
else
{
        <div class="div-main">
        @foreach (var employe in employes)
        {
            if (employe.Name != "")
            {
                <div class="div-card">

                    <div class="div-primeiro ">
                        <div class="div-imagem-profile mt-3">
                         <img class="imagem-profile" src="picture.jpg" />
                    </div>
                        <div class="div-primeiro mt-3">
                            <button   @onclick="OpenModal"  class="btn btn-primary w-100">Editar</button>
                            <button @onclick="() => DeleteUser(employe.Id)" class="btn btn-danger mt-2">Remover</button>
                        </div>
                  </div>

                    <div>
                        <div class="row">
                           <div class="col-md-12 p-4" >
                             <div class="info-profile d-flex flex-column align-items-start p-4 shadow-sm rounded" style="gap: 10px; width: 100%;">

                                    <div class="info-item d-flex align-items-center">
                                        <span class="bi bi-person-workspace me-2" style="font-size: 24px; color: #0d6efd;"></span>
                                        <span style="font-size: 20px; font-weight: bold;">@Enum.GetName(typeof(EnumRules), employe.IdCargo)</span> 
                                       
                                    </div>

                                    <div>
                                          <span class="bi bi-person me-2" style="font-size: 24px; color: #0d6efd;"></span>
                                         <span style="font-size: 20px;">@employe.Name</span>
                                    </div>

                                    <div class="info-item d-flex align-items-center">
                                        <span class="bi bi-envelope-fill me-2" style="font-size: 24px; color: #0d6efd;"></span>
                                        <span style="font-size: 18px;">@employe.Email</span>
                                    </div>

                                    <div class="info-item d-flex align-items-center">
                                        <span class="bi bi-telephone-fill me-2" style="font-size: 24px; color: #0d6efd;"></span>
                                        <span style="font-size: 18px;">@String.Format("{0:(##) #####-####}", Convert.ToInt64(employe.Telefones))</span>
                                    </div>

                                    <div class="info-item d-flex align-items-center">
                                        <span class="bi bi-geo-alt-fill me-2" style="font-size: 24px; color: #0d6efd;"></span>
                                        <span style="font-size: 18px;">@employe.Endereco</span>
                                    </div>
                                </div>
                            </div>
                        </div>

                      <div>
                          
                        </div>
                    </div>
            
                </div>
            }
        }

        <Modal @ref="_modal" Id="modalId" Title="Modal Editar" ModalSize="80%;"> 
               <Body>
                  <div>
                          <div clas="row " style="gap: 18px;display: flex; ">
                          <div class="col-md-6">
                              <span>Nome</span>
                                 <InputText id="titulo"  @bind-Value="employeEdit.Name" class="form-control" />
                          </div>

                             <div class="col-md-6">

                           <span>Cargo</span>
                            <InputSelect class="form-control" @bind-Value="employeEdit.IdCargo">
                                <option value="0">Selecione o Cargo</option>
                                @foreach (EnumRules rules in Enum.GetValues(typeof(EnumRules)))
                                {
                                  <option value="@((int)rules)">@rules</option>
                                }
                            </InputSelect>
                          </div>

                      </div>
                     <div clas="row" style="display: flex; gap: 10px;">
                          <div class="col-md-5">
                              <span>Email</span>
                                 <InputText id="txtEmail"  @bind-Value="employeEdit.Email" class="form-control" />
                          </div

                             <div class="col-md-3">
                              <span>Telefone</span>
                                 <InputText id="txtNumero"  @bind-Value="employeEdit.Telefones" class="form-control" />
                          </div>

                             <div class="col-md-4">
                              <span>Salario</span>
                                    <InputNumber class="form-control" @bind-Value="employeEdit.Salario" />
                          </div>

                      </div>
                    

                  </div>
                  
                </Body>
                <Footer>
                    <button class="btn btn-secondary" @onclick="CloseModal">Close</button>
                </Footer>
        </Modal>
             
       </div>
       }

@code {
    private IEnumerable<Employe> employes;

    private Employe employeEdit = new Employe();

    private Modal _modal;

    public ListEmployes()
    {
    }

    protected override async Task OnInitializedAsync()
    {
        employes = await GetAllEmployes();
    }
    public async Task<IEnumerable<Employe>> GetAllEmployes()
    {
        var list = await employeRepository.GetAllEmployes();
        return list;
    }

    public async Task DeleteUser(int id)
    {
        Console.WriteLine($"Deletando o usuário com Id: {id}");
        var success = await employeRepository.DesativarEmploye(id);
        if (success)
        {
            employes = employes.Where(e => e.Id != id); 
            StateHasChanged();
        }
    }

     private void OpenModal()
    {
         _modal.Show();
    }

    private void CloseModal()
    {
         _modal.CloseModal();
    }
}
